%struct.timer_s = type opaque

@.str = private unnamed_addr constant [68 x i8] c"t: tick, r: reset, s: start, x: stop, e: elapsed, o: has overflown\0A\00", align 1
@$timer = external global %struct.timer_s
@.str1 = private unnamed_addr constant [10 x i8] c"%i %i %i\0A\00", align 1
@.str2 = private unnamed_addr constant [4 x i8] c"%i\0A\00", align 1

define i32 @main() nounwind uwtable ssp {
  %1 = alloca i32, align 4
  %h = alloca i32, align 4
  %m = alloca i32, align 4
  %s = alloca i32, align 4
  %o = alloca i1, align 1
  %c = alloca i32, align 4
  store i32 0, i32* %1
  call void @$init$()
  br label %2

; <label>:2                                       ; preds = %0, %26
  %3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([68 x i8]* @.str, i32 0, i32 0))
  %4 = call i32 @getchar()
  store i32 %4, i32* %c, align 4
  %5 = call i32 @getchar()
  %6 = load i32* %c, align 4
  switch i32 %6, label %20 [
    i32 116, label %7
    i32 114, label %8
    i32 115, label %9
    i32 120, label %10
    i32 101, label %11
    i32 111, label %16
  ]

; <label>:7                                       ; preds = %2
  call void @timer$tick(%struct.timer_s* @$timer)
  br label %20

; <label>:8                                       ; preds = %2
  call void @timer$reset(%struct.timer_s* @$timer)
  br label %20

; <label>:9                                       ; preds = %2
  call void @timer$start(%struct.timer_s* @$timer)
  br label %20

; <label>:10                                      ; preds = %2
  call void @timer$stop(%struct.timer_s* @$timer)
  br label %20

; <label>:11                                      ; preds = %2
  call void @timer$elapsed(%struct.timer_s* @$timer, i32* %h, i32* %m, i32* %s)
  %12 = load i32* %h, align 4
  %13 = load i32* %m, align 4
  %14 = load i32* %s, align 4
  %15 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([10 x i8]* @.str1, i32 0, i32 0), i32 %12, i32 %13, i32 %14)
  br label %20

; <label>:16                                      ; preds = %2
  call void @timer$has_overflown(%struct.timer_s* @$timer, i1* %o)
  %17 = load i1* %o, align 1
  %18 = zext i1 %17 to i32
  %19 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i32 %18)
  br label %20

; <label>:20                                      ; preds = %2, %16, %11, %10, %9, %8, %7
  call void @$print$()
  br label %2
                                                  ; No predecessors!
  %22 = load i32* %1
  ret i32 %22
}

declare void @$init$()
declare void @$print$()

declare i32 @printf(i8*, ...)

declare i32 @getchar()

declare void @timer$tick(%struct.timer_s*)

declare void @timer$reset(%struct.timer_s*)

declare void @timer$start(%struct.timer_s*)

declare void @timer$stop(%struct.timer_s*)

declare void @timer$elapsed(%struct.timer_s*, i32*, i32*, i32*)

declare void @timer$has_overflown(%struct.timer_s*, i1*)
